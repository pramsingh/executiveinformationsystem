<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
 	
	<context:component-scan base-package="com.grahamtech.eis.controllers" />
	<mvc:annotation-driven/>
<!-- 	<mvc:default-servlet-handler/> -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/resources1/**" location="resources/" />
<!-- 	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
-->	
	<!--  org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean -->
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">        
    	<property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.grahamtech.eis.pojos"/>
        <!--  <property name="configLocation" value="classpath:hibernate.cfg.xml" /> -->
        <property name="hibernateProperties">
            <props>
              <prop key="hibernate.connection.pool_size">10</prop>
              <prop key="hibernate.connection.show_sql">true</prop>
              <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
            </props>
      </property> 
	</bean> 
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close"><!-- destroy-method="close" -->
	    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	    <property name="url" value="jdbc:mysql://localhost:3306/eisdb"/>
	    <property name="username" value="root"/>
	    <property name="password" value="$Password001"/>
	</bean> 
	<tx:annotation-driven />
	<bean id="transactionManager"
	    class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="myUserProfileDAO" class="com.grahamtech.eis.daos.MyUserProfileDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	<bean id="myProjectDAO" class="com.grahamtech.eis.daos.MyProjectDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	<bean id="myNVDEntryMessageDAO" class="com.grahamtech.eis.daos.MyNVDEntryMessageDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	
	<bean id="myRolesDAO" class="com.grahamtech.eis.daos.MyRolesDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	<bean id="myRiskPreferenceDAO" class="com.grahamtech.eis.daos.MyRiskPreferenceDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	<bean id="myProjectDetailDAO" class="com.grahamtech.eis.daos.MyProjectDetailDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean> 
	<bean id="myProjectPartnerDAO" class="com.grahamtech.eis.daos.MyProjectPartnerDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	<bean id="myProjectSystemDAO" class="com.grahamtech.eis.daos.MyProjectSystemDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	<bean id="mySystemVulnerabilitiesDAO" class="com.grahamtech.eis.daos.MySystemVulnerabilitiesDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	<bean id="mySystemProductDAO" class="com.grahamtech.eis.daos.MySystemProductDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	<bean id="myFlaggedAssetsDAO" class="com.grahamtech.eis.daos.MyFlaggedAssetsDAO">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	
	<!-- Plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
     
    <!-- Convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean> 
    
    <!-- File Upload -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="50000000"/>
	</bean>
	
    <!-- Internationalization -->
    <bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>
 
    <mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="language" />
		</bean>
 	</mvc:interceptors>
	
	<!-- Register the localization.properties -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="localization" />
	</bean>
</beans>